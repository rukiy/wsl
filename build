#!/bin/bash
ALPINE_VERSION=3.13.4
MIRRORS_URL=https://mirrors.ustc.edu.cn
BASE_URL=$MIRRORS_URL/alpine/latest-stable/releases/x86_64/alpine-minirootfs-$ALPINE_VERSION-x86_64.tar.gz
TEMP_DIR=build

rm -rf $TEMP_DIR
mkdir $TEMP_DIR;cd $TEMP_DIR

echo "step:# Download......."
wget -q -O base.tar.gz $BASE_URL
mkdir rootfs
tar -zxpf base.tar.gz -C rootfs

echo "step:# Build......."
cp -f /etc/resolv.conf rootfs/etc/resolv.conf
cp -f ../profile rootfs/etc/profile
sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' rootfs/etc/apk/repositories
chroot rootfs /sbin/apk update 
chroot rootfs /sbin/apk add bash libstdc++
echo "# " | tee rootfs/etc/resolv.conf
rm -rf `find rootfs/var/cache/apk/ -type f`
chmod +x rootfs
echo "setp:# Tar......."
cd rootfs;tar -zcpf ../../rootfs.tar.gz `ls`;cd ..;
chown `id -un` ../rootfs.tar.gz

echo "step:# Build Docker......."
cp -f /etc/resolv.conf rootfs/etc/resolv.conf
chroot rootfs /sbin/apk add docker docker-compose openrc lxc musl-dev 
echo -e 'openrc && mkdir -p /run/openrc/ && touch /run/openrc/softlevel && service docker start' > rootfs/etc/profile.d/docker-start.sh
sed -i 's/${DOCKER_OPTS}/-H unix:\/\/\/var\/run\/docker.sock -H tcp:\/\/0.0.0.0:2375 -p \\"${pidfile}\\" ${DOCKER_OPTS}/g' rootfs/etc/init.d/docker
echo "# " | tee rootfs/etc/resolv.conf
rm -rf `find rootfs/var/cache/apk/ -type f`
chmod +x rootfs
echo "setp:# Tar Docker......."
cd rootfs;tar -zcpf ../../rootfs.docker.tar.gz `ls`;cd ..;
chown `id -un` ../rootfs.docker.tar.gz


echo "step:# Clear......."
rm -rf ../$TEMP_DIR